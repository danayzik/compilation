.data
	string_access_violation: .asciiz "Access Violation"
	string_illegal_div_by_0: .asciiz "Illegal Division By Zero"
	string_invalid_ptr_dref: .asciiz "Invalid Pointer Dereference"
.text
str_cmp_func:
	li $v0, 1
	str_eq_loop:
	lb $s2, 0($a1)
	lb $s3, 0($a2)
	bne $s2, $s3, neq_label
	beq $s2, $zero, str_eq_end
	addi $a1, $a1 1
	addi $a2, $a2 1
	j str_eq_loop
	neq_label:
	li $v0, 0
	str_eq_end:
	jr $ra
concat_strings:
	move $s0, $a1
	li $s1, 0
	count_loop1:
	lb $s2, 0($s0)
	beq $s2, $zero, done_count1
	addi $s1, $s1, 1
	addi $s0, $s0, 1
	j count_loop1
	done_count1:
	move $s0, $a2
	count_loop2:
	lb $s2, 0($s0)
	beq $s2, $zero, done_count2
	addi $s1, $s1, 1
	addi $s0, $s0, 1
	j count_loop2
	done_count2:
	addi $a0, $s1, 1
	li $v0, 9
	addi $sp, $sp, -4
	sw $a3, 0($sp)
	syscall
	lw $a3, 0($sp)
	addi $sp, $sp, 4
	move $s2, $v0
	copy_loop1:
	lb $s0, 0($a1)
	beq $s0, $zero, done_copy1
	sb $s0, 0($s2)
	addi $a1, $a1, 1
	addi $s2, $s2, 1
	j copy_loop1
	done_copy1:
	copy_loop2:
	lb $s0, 0($a2)
	sb $s0, 0($s2)
	beq $s0, $zero, done_copy2
	addi $a2, $a2, 1
	addi $s2, $s2, 1
	j copy_loop2
	done_copy2:
	jr $ra
divide_by_zero_check_func:
	bne $a0, $zero, legal_div
	la $a0, string_illegal_div_by_0
	li $v0, 4
	syscall
	li $v0, 10
	syscall
	legal_div:
	jr $ra
null_deref_check_func:
	bne $a0, $zero, legal_ref
	la $a0, string_invalid_ptr_dref
	li $v0, 4
	syscall
	li $v0, 10
	syscall
	legal_ref:
	jr $ra
array_access_check_func:
	blt $a0, $zero, illegal_access_to_arr
	lw $s0, 0($a0)
	blt $a1, $s0, legal_access_to_arr
	illegal_access_to_arr:
	la $a0, string_access_violation
	li $v0, 4
	syscall
	li $v0, 10
	syscall
	legal_access_to_arr:
	jr $ra
overflow_check_func:
	move $v0, $a0
	li $s0, 32767
	li $s1, -32768
	bge $a0, $s0, return_max_value
	blt $a0, $s1, return_min_value
	jr $ra
	return_max_value:
	li $v0, 32767
	jr $ra
	return_min_value:
	li $s1, -32768
	jr $ra
PrintString:
	lw $a0, 0($sp)
	li $v0, 4
	addi $sp, $sp, -4
	sw $a3, 0($sp)
	syscall
	lw $a3, 0($sp)
	addi $sp, $sp, 4
	addi $sp, $sp, 4
	jr $ra
PrintInt:
	lw $a0, 0($sp)
	li $v0, 1
	addi $sp, $sp, -4
	sw $a3, 0($sp)
	syscall
	lw $a3, 0($sp)
	addi $sp, $sp, 4
	li $a0, 32
	li $v0, 11
	addi $sp, $sp, -4
	sw $a3, 0($sp)
	syscall
	lw $a3, 0($sp)
	addi $sp, $sp, 4
	addi $sp, $sp, 4
	jr $ra
fib:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	move $fp, $sp
	lw $t0, 52($fp)
	li $t1, 0
	xor $t0, $t1, $t0
	sltiu $t0, $t0, 1
	beq $t0, $zero, Label_0_
	li $t0, 0
	move $v0, $t0
	move $sp, $fp
	lw $fp, 0($sp)
	lw $ra, 4($sp)
	addi $sp, $sp, 8
	jr $ra
	move $sp, $fp
	lw $fp, 0($sp)
	lw $ra, 4($sp)
	addi $sp, $sp, 8
	jr $ra
Label_0_:
	lw $t1, 52($fp)
	li $t0, 1
	xor $t0, $t0, $t1
	sltiu $t0, $t0, 1
	beq $t0, $zero, Label_1_
	li $t0, 1
	move $v0, $t0
	move $sp, $fp
	lw $fp, 0($sp)
	lw $ra, 4($sp)
	addi $sp, $sp, 8
	jr $ra
	move $sp, $fp
	lw $fp, 0($sp)
	lw $ra, 4($sp)
	addi $sp, $sp, 8
	jr $ra
Label_1_:
	addi $sp, $sp, -4
	lw $t1, 52($fp)
	li $t0, 1
	sub $t0, $t1, $t0
	move $a0, $t0
	jal overflow_check_func
	move $t0, $v0
	sw $t0, 0($sp)
	addi $sp, $sp, 4
	addi $sp, $sp, -4
	addi $sp, $sp, -4
	sw $a3, 0($sp)
	addi $sp, $sp, -4
	sw $t0, 0($sp)
	addi $sp, $sp, -4
	sw $t1, 0($sp)
	addi $sp, $sp, -4
	sw $t2, 0($sp)
	addi $sp, $sp, -4
	sw $t3, 0($sp)
	addi $sp, $sp, -4
	sw $t4, 0($sp)
	addi $sp, $sp, -4
	sw $t5, 0($sp)
	addi $sp, $sp, -4
	sw $t6, 0($sp)
	addi $sp, $sp, -4
	sw $t7, 0($sp)
	addi $sp, $sp, -4
	sw $t8, 0($sp)
	addi $sp, $sp, -4
	sw $t9, 0($sp)
	jal fib
	lw $t9, 0($sp)
	addi $sp, $sp, 4
	lw $t8, 0($sp)
	addi $sp, $sp, 4
	lw $t7, 0($sp)
	addi $sp, $sp, 4
	lw $t6, 0($sp)
	addi $sp, $sp, 4
	lw $t5, 0($sp)
	addi $sp, $sp, 4
	lw $t4, 0($sp)
	addi $sp, $sp, 4
	lw $t3, 0($sp)
	addi $sp, $sp, 4
	lw $t2, 0($sp)
	addi $sp, $sp, 4
	lw $t1, 0($sp)
	addi $sp, $sp, 4
	lw $t0, 0($sp)
	addi $sp, $sp, 4
	lw $a3, 0($sp)
	addi $sp, $sp, 4
	addi $sp, $sp, 4
	move $t2, $v0
	addi $sp, $sp, -4
	lw $t1, 52($fp)
	li $t0, 2
	sub $t0, $t1, $t0
	move $a0, $t0
	jal overflow_check_func
	move $t0, $v0
	sw $t0, 0($sp)
	addi $sp, $sp, 4
	addi $sp, $sp, -4
	addi $sp, $sp, -4
	sw $a3, 0($sp)
	addi $sp, $sp, -4
	sw $t0, 0($sp)
	addi $sp, $sp, -4
	sw $t1, 0($sp)
	addi $sp, $sp, -4
	sw $t2, 0($sp)
	addi $sp, $sp, -4
	sw $t3, 0($sp)
	addi $sp, $sp, -4
	sw $t4, 0($sp)
	addi $sp, $sp, -4
	sw $t5, 0($sp)
	addi $sp, $sp, -4
	sw $t6, 0($sp)
	addi $sp, $sp, -4
	sw $t7, 0($sp)
	addi $sp, $sp, -4
	sw $t8, 0($sp)
	addi $sp, $sp, -4
	sw $t9, 0($sp)
	jal fib
	lw $t9, 0($sp)
	addi $sp, $sp, 4
	lw $t8, 0($sp)
	addi $sp, $sp, 4
	lw $t7, 0($sp)
	addi $sp, $sp, 4
	lw $t6, 0($sp)
	addi $sp, $sp, 4
	lw $t5, 0($sp)
	addi $sp, $sp, 4
	lw $t4, 0($sp)
	addi $sp, $sp, 4
	lw $t3, 0($sp)
	addi $sp, $sp, 4
	lw $t2, 0($sp)
	addi $sp, $sp, 4
	lw $t1, 0($sp)
	addi $sp, $sp, 4
	lw $t0, 0($sp)
	addi $sp, $sp, 4
	lw $a3, 0($sp)
	addi $sp, $sp, 4
	addi $sp, $sp, 4
	move $t0, $v0
	add $t0, $t2, $t0
	move $a0, $t0
	jal overflow_check_func
	move $t0, $v0
	move $v0, $t0
	move $sp, $fp
	lw $fp, 0($sp)
	lw $ra, 4($sp)
	addi $sp, $sp, 8
	jr $ra
	move $sp, $fp
	lw $fp, 0($sp)
	lw $ra, 4($sp)
	addi $sp, $sp, 8
	jr $ra
	move $sp, $fp
	lw $fp, 0($sp)
	lw $ra, 4($sp)
	addi $sp, $sp, 8
	jr $ra
main:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
	addi $sp, $sp, -4
	sw $fp, 0($sp)
	move $fp, $sp
	addi $sp, $sp, -4
	li $t0, 20
	sw $t0, -4($fp)
	addi $sp, $sp, -4
	addi $sp, $sp, -4
	lw $t0, -4($fp)
	sw $t0, 0($sp)
	addi $sp, $sp, 4
	addi $sp, $sp, -4
	addi $sp, $sp, -4
	sw $a3, 0($sp)
	addi $sp, $sp, -4
	sw $t0, 0($sp)
	addi $sp, $sp, -4
	sw $t1, 0($sp)
	addi $sp, $sp, -4
	sw $t2, 0($sp)
	addi $sp, $sp, -4
	sw $t3, 0($sp)
	addi $sp, $sp, -4
	sw $t4, 0($sp)
	addi $sp, $sp, -4
	sw $t5, 0($sp)
	addi $sp, $sp, -4
	sw $t6, 0($sp)
	addi $sp, $sp, -4
	sw $t7, 0($sp)
	addi $sp, $sp, -4
	sw $t8, 0($sp)
	addi $sp, $sp, -4
	sw $t9, 0($sp)
	jal fib
	lw $t9, 0($sp)
	addi $sp, $sp, 4
	lw $t8, 0($sp)
	addi $sp, $sp, 4
	lw $t7, 0($sp)
	addi $sp, $sp, 4
	lw $t6, 0($sp)
	addi $sp, $sp, 4
	lw $t5, 0($sp)
	addi $sp, $sp, 4
	lw $t4, 0($sp)
	addi $sp, $sp, 4
	lw $t3, 0($sp)
	addi $sp, $sp, 4
	lw $t2, 0($sp)
	addi $sp, $sp, 4
	lw $t1, 0($sp)
	addi $sp, $sp, 4
	lw $t0, 0($sp)
	addi $sp, $sp, 4
	lw $a3, 0($sp)
	addi $sp, $sp, 4
	addi $sp, $sp, 4
	move $t0, $v0
	sw $t0, 0($sp)
	addi $sp, $sp, 4
	addi $sp, $sp, -4
	jal PrintInt
	move $sp, $fp
	lw $fp, 0($sp)
	lw $ra, 4($sp)
	addi $sp, $sp, 8
	jr $ra
